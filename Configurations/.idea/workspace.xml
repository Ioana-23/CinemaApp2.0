<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f8897e11-50e7-4a10-bdfe-b8ebcc315a16" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/movie_screening_service.yml" beforeDir="false" afterPath="$PROJECT_DIR$/movie_screening_service.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/movie_service.yml" beforeDir="false" afterPath="$PROJECT_DIR$/movie_service.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/FlyWayConfig.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/controllers/MovieHallController.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/controllers/MovieHallController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/controllers/MovieScreeningController.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/controllers/MovieScreeningController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/controllers/SeatController.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/controllers/SeatController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/dtos/MovieDTO.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/dtos/MovieDTO.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/entities/MovieScreening.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/entities/MovieScreening.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/repositories/MovieScreeningRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/repositories/MovieScreeningRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/repositories/SeatRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/repositories/SeatRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/services/MovieHallService.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/services/MovieHallService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/services/MovieScreeningService.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/services/MovieScreeningService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/services/SeatService.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/src/main/java/project/services/SeatService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/src/main/resources/application.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/src/main/resources/db/migration/V1__Added_screening_tables.sql" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/src/main/resources/db/migration/V1__Added_screening_tables.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/src/main/resources/db/migration/V2__Configure_movie_hall_seating.sql" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/src/main/resources/db/migration/V2__Configure_movie_hall_seating.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieScreeningService/src/test/java/project/MovieScreeningApplicationTests.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieScreeningService/src/test/java/project/MovieScreeningApplicationTests.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/src/main/java/project/FlyWayConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/src/main/java/project/FlyWayConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/src/main/java/project/controllers/MovieController.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/src/main/java/project/controllers/MovieController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/src/main/java/project/entities/Actor.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/src/main/java/project/entities/Actor.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/src/main/java/project/entities/Genre.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/src/main/java/project/entities/Genre.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/src/main/java/project/entities/Movie.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/src/main/java/project/entities/Movie.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/src/main/java/project/repositories/ActorRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/src/main/java/project/repositories/ActorRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/src/main/java/project/repositories/MovieRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/src/main/java/project/repositories/MovieRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/src/main/java/project/services/MovieService.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/src/main/java/project/services/MovieService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/src/main/resources/application.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/src/main/resources/db/migration/V1__Create_tables.sql" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/src/main/resources/db/migration/V1__Create_tables.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/src/main/resources/db/migration/V2__Add_data_To_Tables.sql" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/src/main/resources/db/migration/V2__Add_data_To_Tables.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/src/main/resources/db/migration/V3__Added_Genre_And_Api_Info.sql" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/src/main/resources/db/migration/V3__Added_Genre_And_Api_Info.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/src/main/resources/db/migration/V4__Added_Actor_Api_Info.sql" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/src/main/resources/db/migration/V4__Added_Actor_Api_Info.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../MovieService/src/test/java/project/MovieApplicationTests.java" beforeDir="false" afterPath="$PROJECT_DIR$/../MovieService/src/test/java/project/MovieApplicationTests.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../UserService/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/../UserService/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../UserService/src/main/java/project/FlyWayConfig.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../UserService/src/main/java/project/controllers/MovieControllerProxy.java" beforeDir="false" afterPath="$PROJECT_DIR$/../UserService/src/main/java/project/controllers/MovieControllerProxy.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../UserService/src/main/java/project/entities/Reservation.java" beforeDir="false" afterPath="$PROJECT_DIR$/../UserService/src/main/java/project/entities/Reservation.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../UserService/src/main/java/project/entities/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/../UserService/src/main/java/project/entities/User.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../UserService/src/main/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/../UserService/src/main/resources/application.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../UserService/src/main/resources/db/migration/V1__Create_user_table.sql" beforeDir="false" afterPath="$PROJECT_DIR$/../UserService/src/main/resources/db/migration/V1__Create_user_table.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../UserService/src/main/resources/db/migration/V3__Added_reservations_table.sql" beforeDir="false" afterPath="$PROJECT_DIR$/../UserService/src/main/resources/db/migration/V3__Added_reservations_table.sql" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../UserService/src/test/java/project/controllers/ReservationControllerTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/../UserService/src/test/java/project/controllers/ReservationControllerTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../UserService/src/test/java/project/controllers/UserControllerTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/../UserService/src/test/java/project/controllers/UserControllerTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../UserService/src/test/java/project/repositories/ReservationRepositoryTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/../UserService/src/test/java/project/repositories/ReservationRepositoryTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../UserService/src/test/java/project/repositories/UserRepositoryTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/../UserService/src/test/java/project/repositories/UserRepositoryTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../UserService/src/test/java/project/services/ReservationServiceTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/../UserService/src/test/java/project/services/ReservationServiceTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../UserService/src/test/java/project/services/UserServiceTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/../UserService/src/test/java/project/services/UserServiceTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../UserService/src/test/resources/application.yml" beforeDir="false" afterPath="$PROJECT_DIR$/../UserService/src/test/resources/application.yml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Configurations" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="Configurations" type="f1a62948:ProjectNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2osn3Kq4CJFm4WFjYg0AzItg4ks" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "Docker.movie_screening_service.yml.db_2: Compose Deployment.executor": "Run",
    "Docker.movie_screening_service.yml.db_3: Compose Deployment.executor": "Run",
    "Docker.movie_screening_service.yml: Compose Deployment.executor": "Run",
    "Docker.movie_service.yml.db_1: Compose Deployment.executor": "Run",
    "Docker.movie_service.yml.db_3: Compose Deployment.executor": "Run",
    "Docker.movie_service.yml: Compose Deployment.executor": "Run",
    "Docker.run.executor": "Run",
    "Docker.user_service.yml.db_1: Compose Deployment.executor": "Run",
    "Docker.user_service.yml.db_2: Compose Deployment.executor": "Run",
    "Docker.user_service.yml: Compose Deployment.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "D:/Projects/CinemaApp/MovieScreeningService",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\Projects\CinemaApp\Configurations" />
    </key>
  </component>
  <component name="RunManager" selected="Docker.movie_screening_service.yml: Compose Deployment">
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="movie_screening_service.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="movie_screening_service.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="movie_screening_service.yml.db_2: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="db_2" />
            </list>
          </option>
          <option name="sourceFilePath" value="movie_screening_service.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="movie_service.yml.db_3: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="db_3" />
            </list>
          </option>
          <option name="sourceFilePath" value="movie_service.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="run" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="secondarySourceFiles">
            <list>
              <option value="user_service.yml" />
              <option value="movie_screening_service.yml" />
            </list>
          </option>
          <option name="sourceFilePath" value="movie_service.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="user_service.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="user_service.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="user_service.yml.db_1: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="db_1" />
            </list>
          </option>
          <option name="sourceFilePath" value="user_service.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.run" />
      <item itemvalue="Docker.movie_screening_service.yml.db_2: Compose Deployment" />
      <item itemvalue="Docker.movie_screening_service.yml: Compose Deployment" />
      <item itemvalue="Docker.movie_service.yml.db_3: Compose Deployment" />
      <item itemvalue="Docker.user_service.yml.db_1: Compose Deployment" />
      <item itemvalue="Docker.user_service.yml: Compose Deployment" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.movie_screening_service.yml: Compose Deployment" />
        <item itemvalue="Docker.movie_screening_service.yml.db_2: Compose Deployment" />
        <item itemvalue="Docker.movie_service.yml.db_3: Compose Deployment" />
        <item itemvalue="Docker.user_service.yml: Compose Deployment" />
        <item itemvalue="Docker.user_service.yml.db_1: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-b114ca120d71-intellij.indexing.shared.core-IU-242.20224.387" />
        <option value="bundled-js-predefined-d6986cc7102b-410509235cf1-JavaScript-IU-242.20224.387" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f8897e11-50e7-4a10-bdfe-b8ebcc315a16" name="Changes" comment="" />
      <created>1731666952506</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1731666952506</updated>
      <workItem from="1731666953674" duration="14076000" />
      <workItem from="1731754448724" duration="5389000" />
      <workItem from="1731768728146" duration="13368000" />
      <workItem from="1731930392795" duration="2603000" />
      <workItem from="1732050402777" duration="618000" />
      <workItem from="1732102278916" duration="2069000" />
      <workItem from="1732182751152" duration="3700000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>